{"ast":null,"code":"var _jsxFileName = \"/Users/decagon/Desktop/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// AppContent.js\nimport React, { useState, useEffect } from \"react\";\nimport { useEntries, EntriesProvider } from \"./context/EntriesContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FormComponent from \"./components/FormComponents\";\nimport EntryListComponent from \"./components/EntryListComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  const {\n    getAllSectors,\n    getAllUploads,\n    createEntries,\n    deleteEntry,\n    updateEntry\n  } = useEntries();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    selectedCategory: \"\",\n    selectedSector: \"\",\n    agreeToTerms: false\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n  const [sectorOptions, setSectorOptions] = useState({});\n  const [details, setDetails] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const sectorsData = await getAllSectors();\n      setSectorOptions(sectorsData);\n    };\n    fetchData();\n  }, [getAllSectors]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const uploadsData = await getAllUploads();\n      setDetails(uploadsData);\n    };\n    fetchData();\n  }, [getAllUploads]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n  };\n  const handleCategoryChange = category => {\n    setFormData(prevData => ({\n      ...prevData,\n      selectedCategory: category,\n      selectedSector: \"\"\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Custom validation for checkbox\n    if (!formData.agreeToTerms) {\n      toast.error(\"Please agree to the terms before saving.\");\n      return;\n    }\n    try {\n      if (isEditing) {\n        await updateEntry(editingId, formData);\n        setDetails(prevDetails => prevDetails.map(entry => entry._id === editingId ? {\n          ...entry,\n          ...formData\n        } : entry));\n        setIsEditing(false);\n        setEditingId(null);\n        toast.success(\"Data has been updated!\");\n      } else {\n        await createEntries(formData);\n        setDetails(prevDetails => {\n          return [formData, ...prevDetails];\n        });\n        toast.success(\"Data has been sent!\");\n        resetForm();\n      }\n    } catch (error) {\n      console.error(\"Error handling submit:\", error);\n      toast.error(\"Error submitting data\");\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      selectedCategory: \"\",\n      selectedSector: \"\",\n      agreeToTerms: false\n    });\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteEntry(id);\n      setDetails(prevDetails => prevDetails.filter(entry => entry._id !== id));\n      toast.success(\"Entry deleted successfully\");\n    } catch (error) {\n      console.error(\"Error handling delete entry:\", error);\n      toast.error(\"Error deleting entry\");\n    }\n  };\n  const handleEdit = id => {\n    const entryToEdit = details.find(entry => entry._id === id);\n    setFormData({\n      name: entryToEdit.name,\n      selectedCategory: entryToEdit.selectedCategory,\n      selectedSector: entryToEdit.selectedSector,\n      agreeToTerms: entryToEdit.agreeToTerms\n    });\n    setIsEditing(true);\n    setEditingId(id);\n  };\n  const handleUpdate = async () => {\n    try {\n      await updateEntry(editingId, formData);\n      setDetails(prevDetails => prevDetails.map(entry => entry._id === editingId ? {\n        ...entry,\n        ...formData\n      } : entry));\n      setIsEditing(false);\n      setEditingId(null);\n      toast.success(\"Data has been updated!\");\n    } catch (error) {\n      console.error(\"Error handling update entry:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mx-auto p-8 min-h-screen bg-green-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-5 text-center\",\n        children: \"Please enter your name and pick the Sectors you are currently involved in.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormComponent, {\n        formData: formData,\n        sectorOptions: sectorOptions,\n        handleChange: handleChange,\n        handleCategoryChange: handleCategoryChange,\n        handleSubmit: isEditing ? handleUpdate : handleSubmit,\n        isEditing: isEditing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EntryListComponent, {\n        details: details,\n        onDelete: handleDelete,\n        onEdit: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AppContent, \"qpkO1i85o/p0mhCSNZjdaoskT08=\", false, function () {\n  return [useEntries];\n});\n_c = AppContent;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(EntriesProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useEntries","EntriesProvider","ToastContainer","toast","FormComponent","EntryListComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","AppContent","_s","getAllSectors","getAllUploads","createEntries","deleteEntry","updateEntry","formData","setFormData","name","selectedCategory","selectedSector","agreeToTerms","isEditing","setIsEditing","editingId","setEditingId","sectorOptions","setSectorOptions","details","setDetails","fetchData","sectorsData","uploadsData","handleChange","e","value","type","checked","target","prevData","handleCategoryChange","category","handleSubmit","preventDefault","error","prevDetails","map","entry","_id","success","resetForm","console","handleDelete","id","filter","handleEdit","entryToEdit","find","handleUpdate","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onEdit","position","autoClose","_c","App","_c2","$RefreshReg$"],"sources":["/Users/decagon/Desktop/frontend/src/App.js"],"sourcesContent":["// AppContent.js\nimport React, { useState, useEffect } from \"react\";\nimport { useEntries, EntriesProvider } from \"./context/EntriesContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FormComponent from \"./components/FormComponents\";\nimport EntryListComponent from \"./components/EntryListComponent\";\n\nconst AppContent = () => {\n  const {\n    getAllSectors,\n    getAllUploads,\n    createEntries,\n    deleteEntry,\n    updateEntry,\n  } = useEntries();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    selectedCategory: \"\",\n    selectedSector: \"\",\n    agreeToTerms: false,\n  });\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingId, setEditingId] = useState(null);\n\n  const [sectorOptions, setSectorOptions] = useState({});\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const sectorsData = await getAllSectors();\n      setSectorOptions(sectorsData);\n    };\n\n    fetchData();\n  }, [getAllSectors]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const uploadsData = await getAllUploads();\n      setDetails(uploadsData);\n    };\n\n    fetchData();\n  }, [getAllUploads]);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  const handleCategoryChange = (category) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      selectedCategory: category,\n      selectedSector: \"\",\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Custom validation for checkbox\n    if (!formData.agreeToTerms) {\n      toast.error(\"Please agree to the terms before saving.\");\n      return;\n    }\n\n    try {\n      if (isEditing) {\n        await updateEntry(editingId, formData);\n\n        setDetails((prevDetails) =>\n          prevDetails.map((entry) =>\n            entry._id === editingId ? { ...entry, ...formData } : entry\n          )\n        );\n        setIsEditing(false);\n        setEditingId(null);\n        toast.success(\"Data has been updated!\");\n      } else {\n        await createEntries(formData);\n        setDetails((prevDetails) => {\n          return [formData, ...prevDetails];\n        });\n        toast.success(\"Data has been sent!\");\n        resetForm();\n      }\n    } catch (error) {\n      console.error(\"Error handling submit:\", error);\n\n      toast.error(\"Error submitting data\");\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: \"\",\n      selectedCategory: \"\",\n      selectedSector: \"\",\n      agreeToTerms: false,\n    });\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await deleteEntry(id);\n\n      setDetails((prevDetails) =>\n        prevDetails.filter((entry) => entry._id !== id)\n      );\n\n      toast.success(\"Entry deleted successfully\");\n    } catch (error) {\n      console.error(\"Error handling delete entry:\", error);\n\n      toast.error(\"Error deleting entry\");\n    }\n  };\n\n  const handleEdit = (id) => {\n    const entryToEdit = details.find((entry) => entry._id === id);\n    setFormData({\n      name: entryToEdit.name,\n      selectedCategory: entryToEdit.selectedCategory,\n      selectedSector: entryToEdit.selectedSector,\n      agreeToTerms: entryToEdit.agreeToTerms,\n    });\n    setIsEditing(true);\n    setEditingId(id);\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await updateEntry(editingId, formData);\n\n      setDetails((prevDetails) =>\n        prevDetails.map((entry) =>\n          entry._id === editingId ? { ...entry, ...formData } : entry\n        )\n      );\n      setIsEditing(false);\n      setEditingId(null);\n      toast.success(\"Data has been updated!\");\n    } catch (error) {\n      console.error(\"Error handling update entry:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container-fluid mx-auto p-8 min-h-screen bg-green-50\">\n        <h1 className=\"text-3xl font-bold mb-5 text-center\">\n          Please enter your name and pick the Sectors you are currently involved\n          in.\n        </h1>\n        <FormComponent\n          formData={formData}\n          sectorOptions={sectorOptions}\n          handleChange={handleChange}\n          handleCategoryChange={handleCategoryChange}\n          handleSubmit={isEditing ? handleUpdate : handleSubmit}\n          isEditing={isEditing}\n        />\n        <EntryListComponent\n          details={details}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n        />\n      </div>\n      <ToastContainer position=\"bottom-right\" autoClose={3000} />\n    </>\n  );\n};\n\nconst App = () => {\n  return (\n    <EntriesProvider>\n      <AppContent />\n    </EntriesProvider>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}